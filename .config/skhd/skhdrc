#  NOTE(koekeishiya): A list of all built-in modifier and literal keywords can
#                     be found at https://github.com/koekeishiya/skhd/issues/1
#
#                     A hotkey is written according to the following rules:
#
#                       hotkey       = <mode> '<' <action> | <action>
#
#                       mode         = 'name of mode' | <mode> ',' <mode>
#
#                       action       = <keysym> '[' <proc_map_lst> ']' | <keysym> '->' '[' <proc_map_lst> ']'
#                                      <keysym> ':' <command>          | <keysym> '->' ':' <command>
#                                      <keysym> ';' <mode>             | <keysym> '->' ';' <mode>
#
#                       keysym       = <mod> '-' <key> | <key>
#
#                       mod          = 'modifier keyword' | <mod> '+' <mod>
#
#                       key          = <literal> | <keycode>
#
#                       literal      = 'single letter or built-in keyword'
#
#                       keycode      = 'apple keyboard kVK_<Key> values (0x3C)'
#
#                       proc_map_lst = * <proc_map>
#
#                       proc_map     = <string> ':' <command> | <string>     '~' |
#                                      '*'      ':' <command> | '*'          '~'
#
#                       string       = '"' 'sequence of characters' '"'
#
#                       command      = command is executed through '$SHELL -c' and
#                                      follows valid shell syntax. if the $SHELL environment
#                                      variable is not set, it will default to '/bin/bash'.
#                                      when bash is used, the ';' delimeter can be specified
#                                      to chain commands.
#
#                                      to allow a command to extend into multiple lines,
#                                      prepend '\' at the end of the previous line.
#
#                                      an EOL character signifies the end of the bind.
#
#                       ->           = keypress is not consumed by skhd
#
#                       *            = matches every application not specified in <proc_map_lst>
#
#                       ~            = application is unbound and keypress is forwarded per usual, when specified in a <proc_map>
#
#  NOTE(koekeishiya): A mode is declared according to the following rules:
#
#                       mode_decl = '::' <name> '@' ':' <command> | '::' <name> ':' <command> |
#                                   '::' <name> '@'               | '::' <name>
#
#                       name      = desired name for this mode,
#
#                       @         = capture keypresses regardless of being bound to an action
#
#                       command   = command is executed through '$SHELL -c' and
#                                   follows valid shell syntax. if the $SHELL environment
#                                   variable is not set, it will default to '/bin/bash'.
#                                   when bash is used, the ';' delimeter can be specified
#                                   to chain commands.
#
#                                   to allow a command to extend into multiple lines,
#                                   prepend '\' at the end of the previous line.
#
#                                   an EOL character signifies the end of the bind.

# add an on_enter command to the default mode
# :: default : yabai -m config active_window_border_color 0xff775759
#
# defines a new mode 'test' with an on_enter command, that captures keypresses
# :: test @ : yabai -m config active_window_border_color 0xff24ccaa
#
# defines a new mode 'launcher' with an on_enter command, that captures keypresses
:: launcher @ : osascript -e 'display notification "[B]rowser (Brave)\n[C]hat (Slack)\n[M]ongoDB Compass\n[P]ostman\n[S]creenshot\n[Y]outube Music\n[ESC] - Exit Launcher Mode" with title "Launcher Mode Open"'

# from 'default' mode, activate mode 'launcher'
cmd - o ; launcher
# launch mongodb instance when in either 'launcher' mode
launcher < m : skhd -k "escape";\
               open -na /Applications/MongoDB\ Compass.app;

launcher < p : skhd -k "escape";\
               open -na /Applications/Postman.app;

launcher < c : skhd -k "escape";\
               open -na /Applications/Slack.app;

launcher < y : skhd -k "escape";\
               open -na $HOME/Applications/Brave\ Browser\ Apps.localized/YouTube\ Music.app;

launcher < b : skhd -k "escape";\
               open -na /Applications/Brave\ Browser.app;

# launcher < s : skhd -k "escape";\
#                screencapture -i "$HOME/Downloads/screencapture_$(date -Iseconds).png" && open "$HOME/Downloads";
launcher < s : skhd -k "escape";\
                /Applications/flameshot.app/Contents/MacOS/flameshot gui && open "$HOME/Downloads/screenshots";

# from 'launcher' mode, activate mode 'default'
launcher < escape ; default

:: fzfscripts @ : osascript -e 'display notification "[I]cons\n[L]ogout\n[S]sh\n[ESC] - Exit FZFScripts Mode" with title "FZFScripts Mode Open"'
# from 'default' mode, activate mode 'fzfscripts'
cmd - i ; fzfscripts
fzfscripts < l : skhd -k "escape";\
                  /usr/local/bin/alacritty -owindow.dimensions.columns=40 -owindow.dimensions.lines=15 --command zsh -l -c "/usr/local/bin/fzf-logout";

fzfscripts < i : skhd -k "escape";\
                  /usr/local/bin/alacritty -owindow.dimensions.columns=150 -owindow.dimensions.lines=15 --command zsh -l -c "/usr/local/bin/fzf-icons";

fzfscripts < s : skhd -k "escape";\
                  /usr/local/bin/alacritty -owindow.dimensions.columns=150 -owindow.dimensions.lines=15 --command zsh -l -c "/usr/local/bin/fzf-ssh";

# from 'fzfscripts' mode, activate mode 'default'
fzfscripts < escape ; default

# :: utils @ : osascript -e 'display notification "[a] - screenshot\n[ESC] - Exit Utils Mode" with title "Utils Mode Open"'
# # from 'default' mode, activate mode 'fzfscripts'
# cmd - 1 ; utils
# utils < s : skhd -k "escape";\
#                 /Applications/flameshot.app/Contents/MacOS/flameshot gui 
#
# # from 'fzfscripts' mode, activate mode 'default's
# utils < escape ; default
# from 'default' mode, activate mode 'test'
# cmd - x ; test
#
#
# from 'test' mode, activate mode 'default'
# test < cmd - x ; default
#
# launch a new terminal instance when in either 'default' or 'test' mode
# default, test < cmd - return : open -na /Applications/Terminal.app

# application specific bindings
#
# cmd - n [
#     "kitty"       : echo "hello kitty"
#     *             : echo "hello everyone"
#     "qutebrowser" : echo "hello qutebrowser"
#     "terminal"    ~
#     "finder"      : false
# ]

# specify a file that should be included as an additional config-file.
# treated as an absolutepath if the filename begins with '/' otherwise
# the file is relative to the path of the config-file it was loaded from.
#
# .load "/Users/Koe/.config/partial_skhdrc"
# .load "partial_skhdrc"

# prevent skhd from monitoring events for specific applications.
#
# .blacklist [
#    "kitty"
#    "terminal"
#    "qutebrowser"
# ]

# defines a new mode 'resize' with an on_enter command, that captures keypresses
:: resize @ : yabai -m config active_window_opacity 1; yabai -m config normal_window_opacity 0.9;osascript -e 'display notification "Resize active window with H J K L" with title "Resize Mode"'

# from 'default' mode, activate mode 'resize'
# (this is the key combination you want to use to enter resize mode)
cmd - r ; resize 

resize < h : yabai -m window --resize left:-20:0 || yabai -m window --resize right:-20:0
resize < j : yabai -m window --resize top:0:20 || yabai -m window --resize bottom:0:20
resize < k : yabai -m window --resize top:0:-20 || yabai -m window --resize bottom:0:-20
resize < l : yabai -m window --resize left:20:0 || yabai -m window --resize right:20:0

# (this is the keypress required to leave resize mode)
resize < escape ; default

# common shortcuts
cmd - b : open -na /Applications/Brave\ Browser.app
cmd + shift - c : open -na /Applications/Slack.app
# cmd + shift - d : open -na /Applications/MongoDB\ Compass.app  
# cmd - m : open -na $HOME/Applications/Brave\ Browser\ Apps.localized/YouTube\ Music.app
# ctrl - w : /usr/local/bin/alacritty --command zsh -l -c "echo 'shutdown\nlogout\nlock screen\nreboot' | fzf ; zsh "
cmd - return [
  "slack"            ~
  "postman"          ~
  # "Brave Browser"    ~
  # "MongoDB Compass"  ~ # not bound here
  *         : open -na /Applications/Alacritty.app
]

ctrl - return [
  "slack" : skhd -k "cmd - return"
  "postman" : skhd -k "cmd - return"
]

ctrl + cmd - return : open -na /Applications/Alacritty.app

ctrl - d [
  "alacritty" ~ 
  "code" ~
  *           : false
]

cmd - q [
  "Brave Browser" : skhd -k "cmd - w"
  "Finder" : skhd -k "cmd - w"
  "Finder" : skhd -k "cmd - w"
]

# zoom out with ctrl - -
ctrl - 0x1B [
  "alacritty" ~
  "code" ~
  * : skhd -k "cmd - 0x1B"
]

# zoom in with ctrl - =
ctrl - 0x18 [
  "alacritty" ~
  "code" ~
  * : skhd -k "cmd - 0x18"
]

ctrl - c [
  "alacritty" ~
  "code" ~
  * : skhd -k "cmd - c" 
]

ctrl - v [
  "alacritty" ~
  "code" ~
  * : skhd -k "cmd - v" 
]

ctrl - x [
  "alacritty" ~
  "code" ~
  * : skhd -k "cmd - x" 
]

ctrl - a [
  "alacritty" ~
  "code" ~
  * : skhd -k "cmd - a" 
]

ctrl - z [
  "alacritty" ~
  "code" ~
  * : skhd -k "cmd - z" 
]

ctrl - s [
  "alacritty" ~ 
  "code" ~
  * : skhd -k "cmd - s" 
]

# try searching with "/"
ctrl - f [
  "alacritty" ~ 
  "code" ~
  "Brave Browser": skhd -k "0x2C"
  * ~ 
]

ctrl + shift - i [
  "Brave Browser" : skhd -k "cmd + alt - i"
]

#
# YABAI
#
# change window focus within space
cmd - j : yabai -m window --focus south || yabai -m display --focus south
cmd - k : yabai -m window --focus north || yabai -m display --focus north 
# hack to get cmd - h to work
cmd - h: skhd -k "cmd + shift + ctrl + alt - 1" 
cmd + shift + ctrl + alt - 1 : yabai -m window --focus west || yabai -m display --focus west
cmd - l : yabai -m window --focus east || yabai -m display --focus east 

#change focus between external displays (left and right)
# cmd + ctrl - h: yabai -m display --focus east
# cmd + ctrl - l: yabai -m display --focus west

# move window and split
cmd + shift - j : yabai -m window --warp south
cmd + shift - k : yabai -m window --warp north
cmd + shift - h : WIN_ID=$(yabai -m query --windows --window | jq '.id'); yabai -m window --swap west; [[ ! $? == 0 ]] && (yabai -m display --focus west; yabai -m window last --insert east; yabai -m window --focus $WIN_ID; yabai -m window --display prev; yabai -m window --focus $WIN_ID); 
cmd + shift - l : WIN_ID=$(yabai -m query --windows --window | jq '.id'); yabai -m window --swap east; [[ ! $? == 0 ]] && (yabai -m display --focus east; yabai -m window first --insert west; yabai -m window --focus $WIN_ID; yabai -m window --display next; yabai -m window --focus $WIN_ID);

# move window to display left and right
# cmd + ctrl - j : yabai -m window --display east; yabai -m display --focus east;
# cmd + ctrl - k : yabai -m window --display west; yabai -m display --focus west;

#move window to prev and next space
# cmd + shift - p : yabai -m window --space prev;
# cmd + shift - n : yabai -m window --space next;

# move window to space #
cmd + shift - 1 : yabai -m window --space 1; yabai -m space --focus 1;
cmd + shift - 2 : yabai -m window --space 2; yabai -m space --focus 2;
cmd + shift - 3 : yabai -m window --space 3; yabai -m space --focus 3;
cmd + shift - 4 : yabai -m window --space 4; yabai -m space --focus 4;
cmd + shift - 5 : yabai -m window --space 5; yabai -m space --focus 5;
cmd + shift - 6 : yabai -m window --space 6; yabai -m space --focus 6;
cmd + shift - 7 : yabai -m window --space 7; yabai -m space --focus 7;
cmd + shift - 8 : yabai -m window --space 8; yabai -m space --focus 8;
cmd + shift - 9 : yabai -m window --space 9; yabai -m space --focus 9;
cmd + shift - 0 : yabai -m window --space 10; yabai -m space --focus 10;

cmd - 1 : yabai -m space --focus 1;
cmd - 2 : yabai -m space --focus 2;
cmd - 3 : yabai -m space --focus 3;
cmd - 4 : yabai -m space --focus 4;
cmd - 5 : yabai -m space --focus 5;
cmd - 6 : yabai -m space --focus 6;
cmd - 7 : yabai -m space --focus 7;
cmd - 8 : yabai -m space --focus 8;
cmd - 9 : yabai -m space --focus 9;
cmd - 0 : yabai -m space --focus 10;

cmd - f : yabai -m space --toggle gap && yabai -m space --toggle padding && yabai -m window --toggle zoom-fullscreen

cmd + shift - space: yabai -m window --toggle float

# stop/start/restart yabai
# ctrl + alt - q : yabai --stop-service
# ctrl + alt - s : yabai --start-service
cmd + shift - r : yabai --restart-service && skhd -r && sketchybar --reload


